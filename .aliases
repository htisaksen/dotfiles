#!/bin/zsh
#####################################   Dir   ###################################
# Detect which `ls` flavor is in use
if ls --color > /dev/null 2>&1; then # GNU `ls`
	colorflag="--color"
else # OS X `ls`
	colorflag="-G"
fi
# show sizes in MB
alias free='free -m'
# throw item in trash
alias trash="rm -i"
# copy file interactive
alias cp='cp -i'
# move file interactive
alias mv='mv -i'
alias cd..="cd .."
# List all files colorized in long format
alias l="ls -lF ${colorflag}"
# Lise all files colorized in long format, including dot files
alias la="ls -laF ${colorflag}"
# List only directories
alias lsd="ls -lF ${colorflag} | grep --color=never '^d'"
# Always use color output for `ls`
alias ls="command ls ${colorflag}"
# human-readable sizes
alias df='df -h'
# Always enable colored `grep` output
alias grep='grep --color=auto '
alias egrep='egrep --colour=auto'
alias fgrep='fgrep --colour=auto'
# Enable aliases to be sudoâ€™ed
alias sudo='sudo '
# Easier navigation: .., ..., ...., ....., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ~="cd ~" # `cd` is probably faster to type though
alias -- -="cd -"
# Shortcuts
alias dl="cd ~/Downloads"
alias g="git"
alias h="history"
alias gc=". /usr/local/bin/gitdate && git commit -v "
##################################### Network ###################################
# IP addresses
alias pubip="wget http://ipinfo.io/ip -qO -"
alias localip="sudo ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1'"
alias ips="sudo ifconfig -a | grep -o 'inet6\? \(addr:\)\?\s\?\(\(\([0-9]\+\.\)\{3\}[0-9]\+\)\|[a-fA-F0-9:]\+\)' | awk '{ sub(/inet6? (addr:)? ?/, \"\"); print }'"
# httpie
for method in get post put delete; do
	alias "$method"="http '$method'"
done
# vhosts
alias hosts='sudo vim /etc/hosts'
# bat > cat 
alias cat='bat'
#####################################   Git   ###################################
alias diff='colordiff -u'
###############################   Other Utilities   #############################
# Get week number
alias week='date +%V'
# Stopwatch
alias timer='echo "Timer started. Stop with Ctrl-D." && date && time cat && date'
# Merge PDF files
# Usage: `mergepdf -o output.pdf input{1,2,3}.pdf`
alias mergepdf='/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py'
####################################  Docker  ###################################
# remove all docker containers
alias drma='docker rm `docker ps -aq --filter status=exited --filter status=created`'
# remove all untagged images
alias drmi='docker rmi -f $(docker images -f "dangling=true" -q)'
# remove dangling volumes
alias drmv='docker volume rm $(docker volume ls -f dangling=true -q)'
##################################  Kubernetes  #################################
# kubectl proxy
alias kubeproxy='kubectl proxy --port=9999'
####################################   Brew   ###################################
#upgrade homebrew
alias brewup='brew update; brew upgrade; brew prune; brew cleanup; brew doctor'

# colors() {
# 	local fgc bgc vals seq0
#
# 	printf "Color escapes are %s\n" '\e[${value};...;${value}m'
# 	printf "Values 30..37 are \e[33mforeground colors\e[m\n"
# 	printf "Values 40..47 are \e[43mbackground colors\e[m\n"
# 	printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"
#
# 	# foreground colors
# 	for fgc in {30..37}; do
# 		# background colors
# 		for bgc in {40..47}; do
# 			fgc=${fgc#37} # white
# 			bgc=${bgc#40} # black
#
# 			vals="${fgc:+$fgc;}${bgc}"
# 			vals=${vals%%;}
#
# 			seq0="${vals:+\e[${vals}m}"
# 			printf "  %-9s" "${seq0:-(default)}"
# 			printf " ${seq0}TEXT\e[m"
# 			printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
# 		done
# 		echo; echo
# 	done
# }

ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.jar)   	   jar xf $1   ;;
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

decode_base64_url() {
  local len=$((${#1} % 4))
  local result="$1"
  if [ $len -eq 2 ]; then result="$1"'=='
  elif [ $len -eq 3 ]; then result="$1"'='
  fi
  echo "$result" | tr '_-' '/+' | openssl enc -d -base64
}

decode_jwt(){
   decode_base64_url $(echo -n $2 | cut -d "." -f $1) | jq .
}

# Decode JWT header
alias jwth="decode_jwt 1"

# Decode JWT Payload
alias jwtp="decode_jwt 2"
